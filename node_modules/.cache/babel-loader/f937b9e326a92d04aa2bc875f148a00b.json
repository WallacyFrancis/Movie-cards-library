{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Call = require('./Call');\n\nvar IsArray = require('./IsArray');\n\nvar GetV = require('./GetV');\n\nvar IsPropertyKey = require('./IsPropertyKey'); // https://ecma-international.org/ecma-262/6.0/#sec-invoke\n\n\nmodule.exports = function Invoke(O, P) {\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: P must be a Property Key');\n  }\n\n  var argumentsList = arguments.length > 2 ? arguments[2] : [];\n\n  if (!IsArray(argumentsList)) {\n    throw new $TypeError('Assertion failed: optional `argumentsList`, if provided, must be a List');\n  }\n\n  var func = GetV(O, P);\n  return Call(func, O, argumentsList);\n};","map":null,"metadata":{},"sourceType":"script"}